{"version":3,"sources":["components/DataTable.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["rows","jsondata","map","element","_id","isActive","balance","age","eyeColor","name","gender","email","phone","address","favoriteFruit","descendingComparator","a","b","orderBy","headCells","id","numeric","disablePadding","label","EnhancedTableHead","props","classes","onSelectAllClick","order","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","checked","onChange","inputProps","headCell","key","align","sortDirection","TableSortLabel","active","direction","onClick","property","event","className","visuallyHidden","useToolbarStyles","makeStyles","theme","createStyles","root","paddingLeft","spacing","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","lighten","light","text","primary","dark","title","flex","EnhancedTableToolbar","Toolbar","clsx","Typography","variant","component","Tooltip","IconButton","aria-label","useStyles","width","paper","marginBottom","table","minWidth","border","clip","height","margin","overflow","position","top","EnhancedTable","React","useState","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","emptyRows","Math","min","length","Paper","TableContainer","Table","aria-labelledby","size","target","newSelecteds","n","TableBody","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","slice","row","isItemSelected","indexOf","labelId","hover","selectedIndex","newSelected","concat","handleClick","role","aria-checked","tabIndex","scope","style","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","value","FormControlLabel","control","Switch","App","Fragment","CssBaseline","Container","maxWidth","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e06f4c53.chunk.js","sourcesContent":["import React from \"react\";\nimport clsx from \"clsx\";\nimport {\n  createStyles,\n  lighten,\n  makeStyles,\n  Theme,\n} from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport jsondata from \"../data/test.json\";\n\ninterface Data {\n  _id: string;\n  isActive?: boolean | string;\n  balance?: string;\n  age?: number | string;\n  eyeColor?: string;\n  name?: string;\n  gender?: string;\n  email?: string;\n  phone?: string;\n  address?: string;\n  favoriteFruit?: string;\n}\n\nfunction createDataRows(jsondata: Array<Data>) {\n  return jsondata.map(function (element: Data) {\n    return {\n      _id: element._id,\n      isActive: element.isActive ? \"Yes\" : \"No\",\n      balance: element.balance ? element.balance : \"\",\n      age: element.age ? element.age : \"\",\n      eyeColor: element.eyeColor ? element.eyeColor : \"\",\n      name: element.name ? element.name : \"\",\n      gender: element.gender ? element.gender : \"\",\n      email: element.email ? element.email : \"\",\n      phone: element.phone ? element.phone : \"\",\n      address: element.address ? element.address : \"\",\n      favoriteFruit: element.favoriteFruit ? element.favoriteFruit : \"\",\n    };\n  });\n}\n\nconst rows = createDataRows(jsondata);\n\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\ntype Order = \"asc\" | \"desc\";\n\nfunction getComparator<Key extends keyof any>(\n  order: Order,\n  orderBy: Key\n): (\n  a: { [key in Key]: number | string },\n  b: { [key in Key]: number | string }\n) => number {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort<T>(array: T[], comparator: (a: T, b: T) => number) {\n  const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\ninterface HeadCell {\n  disablePadding: boolean;\n  id: keyof Data;\n  label: string;\n  numeric: boolean;\n}\n\nconst headCells: HeadCell[] = [\n  {\n    id: \"name\",\n    numeric: false,\n    disablePadding: true,\n    label: \"Name\",\n  },\n  { id: \"isActive\", numeric: false, disablePadding: false, label: \"isActive\" },\n  { id: \"balance\", numeric: true, disablePadding: false, label: \"balance\" },\n  { id: \"age\", numeric: true, disablePadding: false, label: \"age\" },\n  { id: \"eyeColor\", numeric: false, disablePadding: false, label: \"eyeColor\" },\n  { id: \"gender\", numeric: false, disablePadding: false, label: \"gender\" },\n  { id: \"email\", numeric: false, disablePadding: false, label: \"email\" },\n  { id: \"phone\", numeric: false, disablePadding: false, label: \"phone\" },\n  { id: \"address\", numeric: false, disablePadding: false, label: \"address\" },\n  {\n    id: \"favoriteFruit\",\n    numeric: false,\n    disablePadding: false,\n    label: \"favoriteFruit\",\n  },\n];\n\ninterface EnhancedTableProps {\n  classes: ReturnType<typeof useStyles>;\n  numSelected: number;\n  onRequestSort: (\n    event: React.MouseEvent<unknown>,\n    property: keyof Data\n  ) => void;\n  onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  order: Order;\n  orderBy: string;\n  rowCount: number;\n}\n\nfunction EnhancedTableHead(props: EnhancedTableProps) {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n  } = props;\n  const createSortHandler = (property: keyof Data) => (\n    event: React.MouseEvent<unknown>\n  ) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ \"aria-label\": \"select all\" }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? \"right\" : \"left\"}\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nconst useToolbarStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(1),\n    },\n    highlight:\n      theme.palette.type === \"light\"\n        ? {\n            color: theme.palette.secondary.main,\n            backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n          }\n        : {\n            color: theme.palette.text.primary,\n            backgroundColor: theme.palette.secondary.dark,\n          },\n    title: {\n      flex: \"1 1 100%\",\n    },\n  })\n);\n\ninterface EnhancedTableToolbarProps {\n  numSelected: number;\n}\n\nconst EnhancedTableToolbar = (props: EnhancedTableToolbarProps) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography\n          className={classes.title}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n          component=\"div\"\n        >\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography\n          className={classes.title}\n          variant=\"h6\"\n          id=\"tableTitle\"\n          component=\"div\"\n        >\n          Data Table\n        </Typography>\n      )}\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\",\n    },\n    paper: {\n      width: \"100%\",\n      marginBottom: theme.spacing(2),\n    },\n    table: {\n      minWidth: 750,\n    },\n    visuallyHidden: {\n      border: 0,\n      clip: \"rect(0 0 0 0)\",\n      height: 1,\n      margin: -1,\n      overflow: \"hidden\",\n      padding: 0,\n      position: \"absolute\",\n      top: 20,\n      width: 1,\n    },\n  })\n);\n\nexport default function EnhancedTable() {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState<Order>(\"asc\");\n  const [orderBy, setOrderBy] = React.useState<keyof Data>(\"_id\");\n  const [selected, setSelected] = React.useState<string[]>([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(3);\n\n  const handleRequestSort = (\n    event: React.MouseEvent<unknown>,\n    property: keyof Data\n  ) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n._id);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event: React.MouseEvent<unknown>, _id: string) => {\n    const selectedIndex = selected.indexOf(_id);\n    let newSelected: string[] = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, _id);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = (_id: string) => selected.indexOf(_id) !== -1;\n\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} />\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? \"small\" : \"medium\"}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row: Data, index) => {\n                  const isItemSelected = isSelected(row._id);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={(event) => handleClick(event, row._id)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row._id}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ \"aria-labelledby\": labelId }}\n                        />\n                      </TableCell>\n                      <TableCell\n                        component=\"th\"\n                        id={labelId}\n                        scope=\"row\"\n                        padding=\"none\"\n                      >\n                        {row.name}\n                      </TableCell>\n                      <TableCell align=\"right\">{row.isActive}</TableCell>\n                      <TableCell align=\"right\">{row.balance}</TableCell>\n                      <TableCell align=\"right\">{row.age}</TableCell>\n                      <TableCell align=\"right\">{row.eyeColor}</TableCell>\n                      <TableCell align=\"right\">{row.gender}</TableCell>\n                      <TableCell align=\"right\">{row.email}</TableCell>\n                      <TableCell align=\"right\">{row.phone}</TableCell>\n                      <TableCell align=\"right\">{row.address}</TableCell>\n                      <TableCell align=\"right\">{row.favoriteFruit}</TableCell>\n                      {/* <TableCell align=\"right\">{row.calories}</TableCell>\n                      <TableCell align=\"right\">{row.fat}</TableCell>\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\n                      <TableCell align=\"right\">{row.protein}</TableCell> */}\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[3, 5, 10]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Container from \"@material-ui/core/Container\";\nimport DataTable from \"./components/DataTable\";\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Container maxWidth=\"xl\">\n        <DataTable />\n      </Container>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}